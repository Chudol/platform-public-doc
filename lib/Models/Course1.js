/**
 * PlatformPublicAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Course1
 */
class Course1 extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id || obj._id);
        this.name = this.constructor.getValue(obj.name);
        this.progress = this.constructor.getValue(obj.progress);
        this.startAt = this.constructor.getValue(obj.startAt);
        this.userLessonsStarted = this.constructor.getValue(obj.userLessonsStarted);
        this.lessonsCount = this.constructor.getValue(obj.lessonsCount);
        this.modulesAnalytics = this.constructor.getValue(obj.modulesAnalytics);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: '_id' },
            { name: 'name', realName: 'name' },
            { name: 'progress', realName: 'progress' },
            { name: 'startAt', realName: 'startAt' },
            { name: 'userLessonsStarted', realName: 'userLessonsStarted' },
            { name: 'lessonsCount', realName: 'lessonsCount' },
            {
                name: 'modulesAnalytics',
                realName: 'modulesAnalytics',
                array: true,
                type: 'ModulesAnalytic',
            },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Course1;
