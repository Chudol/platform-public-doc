/**
 * PlatformPublicAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of M200GetUser
 */
class M200GetUser extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id || obj._id);
        this.firstName = this.constructor.getValue(obj.firstName);
        this.lastName = this.constructor.getValue(obj.lastName);
        this.createdAt = this.constructor.getValue(obj.createdAt);
        this.email = this.constructor.getValue(obj.email);
        this.credits = this.constructor.getValue(obj.credits);
        this.finishedLessons = this.constructor.getValue(obj.finishedLessons);
        this.inProgressLessons = this.constructor.getValue(obj.inProgressLessons);
        this.purchasedCourses = this.constructor.getValue(obj.purchasedCourses);
        this.purchasedLessons = this.constructor.getValue(obj.purchasedLessons);
        this.loginSessions = this.constructor.getValue(obj.loginSessions);
        this.totalLoginTime = this.constructor.getValue(obj.totalLoginTime);
        this.averageLoginTime = this.constructor.getValue(obj.averageLoginTime);
        this.courses = this.constructor.getValue(obj.courses);
        this.totalPurchases = this.constructor.getValue(obj.totalPurchases);
        this.lifeTimeValue = this.constructor.getValue(obj.lifeTimeValue);
        this.orders = this.constructor.getValue(obj.orders);
        this.quizes = this.constructor.getValue(obj.quizes);
        this.subscriptions = this.constructor.getValue(obj.subscriptions);
        this.endedSubscriptions = this.constructor.getValue(obj.endedSubscriptions);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: '_id' },
            { name: 'firstName', realName: 'firstName' },
            { name: 'lastName', realName: 'lastName' },
            { name: 'createdAt', realName: 'createdAt' },
            { name: 'email', realName: 'email' },
            { name: 'credits', realName: 'credits' },
            {
                name: 'finishedLessons',
                realName: 'finishedLessons',
                array: true,
                type: 'FinishedLesson',
            },
            {
                name: 'inProgressLessons',
                realName: 'inProgressLessons',
                array: true,
                type: 'InProgressLesson',
            },
            {
                name: 'purchasedCourses',
                realName: 'purchasedCourses',
                array: true,
                type: 'PurchasedCourse',
            },
            {
                name: 'purchasedLessons',
                realName: 'purchasedLessons',
                array: true,
                type: 'PurchasedLesson',
            },
            { name: 'loginSessions', realName: 'loginSessions' },
            { name: 'totalLoginTime', realName: 'totalLoginTime' },
            { name: 'averageLoginTime', realName: 'averageLoginTime' },
            { name: 'courses', realName: 'courses', array: true, type: 'Course1' },
            { name: 'totalPurchases', realName: 'totalPurchases' },
            { name: 'lifeTimeValue', realName: 'lifeTimeValue' },
            { name: 'orders', realName: 'orders', array: true, type: 'Order' },
            { name: 'quizes', realName: 'quizes', array: true, type: 'Quize' },
            { name: 'subscriptions', realName: 'subscriptions', array: true, type: 'Subscription' },
            {
                name: 'endedSubscriptions',
                realName: 'endedSubscriptions',
                array: true,
                type: 'EndedSubscription',
            },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = M200GetUser;
