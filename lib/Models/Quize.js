/**
 * PlatformPublicAPILib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of Quize
 */
class Quize extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id || obj._id);
        this.title = this.constructor.getValue(obj.title);
        this.finishedAt = this.constructor.getValue(obj.finishedAt);
        this.points = this.constructor.getValue(obj.points);
        this.results = this.constructor.getValue(obj.results);
        this.reward = this.constructor.getValue(obj.reward);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: '_id' },
            { name: 'title', realName: 'title' },
            { name: 'finishedAt', realName: 'finishedAt' },
            { name: 'points', realName: 'points' },
            { name: 'results', realName: 'results', array: true, type: 'Result' },
            { name: 'reward', realName: 'reward', type: 'Reward' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = Quize;
